[assembly: System.Resources.NeutralResourcesLanguage("en-US")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("Orc.SupportPackage.Tests")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETCoreApp,Version=v6.0", FrameworkDisplayName=".NET 6.0")]
[assembly: System.Windows.Markup.XmlnsDefinition("http://schemas.wildgums.com/orc/supportpackage", "Orc.SupportPackage")]
[assembly: System.Windows.Markup.XmlnsDefinition("http://schemas.wildgums.com/orc/supportpackage", "Orc.SupportPackage.Views")]
[assembly: System.Windows.Markup.XmlnsPrefix("http://schemas.wildgums.com/orc/supportpackage", "orcsupportpackage")]
[assembly: System.Windows.ThemeInfo(System.Windows.ResourceDictionaryLocation.None, System.Windows.ResourceDictionaryLocation.SourceAssembly)]
public static class LoadAssembliesOnStartup { }
public static class ModuleInitializer
{
    public static void Initialize() { }
}
namespace Orc.SupportPackage
{
    public class CustomPathsPackageFileSystemArtifact : Orc.SupportPackage.SupportPackageFileSystemArtifact
    {
        public CustomPathsPackageFileSystemArtifact(string title, System.Collections.Generic.List<string> paths, bool includeInSupportPackage) { }
        public System.Collections.ObjectModel.ReadOnlyCollection<string> Paths { get; }
    }
    public sealed class DefaultSupportPackageContentProvider : Orc.SupportPackage.ISupportPackageContentProvider
    {
        public DefaultSupportPackageContentProvider(Catel.Services.ILanguageService languageService) { }
        public System.Collections.Generic.IEnumerable<Orc.SupportPackage.SupportPackageFileSystemArtifact> GetSupportPackageFileSystemArtifacts() { }
    }
    public interface ISupportPackageBuilderService
    {
        System.Threading.Tasks.Task<bool> CreateSupportPackageAsync(string fileName, System.Collections.Generic.List<Orc.SupportPackage.SupportPackageFileSystemArtifact> artifacts);
    }
    public interface ISupportPackageContentProvider
    {
        System.Collections.Generic.IEnumerable<Orc.SupportPackage.SupportPackageFileSystemArtifact> GetSupportPackageFileSystemArtifacts();
    }
    public class SupportPackageBuilderService : Orc.SupportPackage.ISupportPackageBuilderService
    {
        public SupportPackageBuilderService(Orc.SupportPackage.ISupportPackageService supportPackageService, Orc.FileSystem.IFileService fileService) { }
        public virtual System.Threading.Tasks.Task<bool> CreateSupportPackageAsync(string fileName, System.Collections.Generic.List<Orc.SupportPackage.SupportPackageFileSystemArtifact> artifacts) { }
    }
    public class SupportPackageDirectory : Orc.SupportPackage.SupportPackageFileSystemArtifact
    {
        public SupportPackageDirectory(string title, string directoryName, bool includeInSupportPackage = true) { }
        public string DirectoryName { get; }
    }
    public class SupportPackageFileNamePattern : Orc.SupportPackage.SupportPackageFileSystemArtifact
    {
        public SupportPackageFileNamePattern(string title, string[] fileNamePatterns, bool includeInSupportPackage = true) { }
        public string[] FileNamePatterns { get; }
    }
    public class SupportPackageFileSystemArtifact
    {
        protected SupportPackageFileSystemArtifact(string title, bool includeInSupportPackage) { }
        public bool IncludeInSupportPackage { get; set; }
        public string Title { get; set; }
    }
}
namespace Orc.SupportPackage.ViewModels
{
    public class SupportPackageViewModel : Catel.MVVM.ViewModelBase
    {
        public static readonly Catel.Data.IPropertyData IncludeCustomPathsInSupportPackageProperty;
        public static readonly Catel.Data.IPropertyData LastSupportPackageFileNameProperty;
        public SupportPackageViewModel(Catel.Services.ISaveFileService saveFileService, Orc.SupportPackage.ISupportPackageBuilderService supportPackageService, Catel.Services.IBusyIndicatorService busyIndicatorService, Catel.Services.IProcessService processService, Catel.Services.ISelectDirectoryService selectDirectoryService, Catel.Services.IOpenFileService openFileService, Catel.Services.ILanguageService languageService, Catel.IoC.IServiceLocator serviceLocator) { }
        public Catel.MVVM.TaskCommand AddDirectoryCommand { get; set; }
        public Catel.MVVM.TaskCommand AddFileCommand { get; }
        public Catel.MVVM.TaskCommand CreateSupportPackage { get; }
        public Catel.Collections.FastObservableCollection<string> CustomPaths { get; }
        public bool IncludeCustomPathsInSupportPackage { get; set; }
        public string? LastSupportPackageFileName { get; }
        public Catel.MVVM.Command OpenDirectory { get; }
        public Catel.MVVM.Command RemovePathCommand { get; }
        public System.Collections.Generic.List<string> SelectedCustomPaths { get; }
        public Catel.MVVM.Command<System.Windows.Controls.SelectionChangedEventArgs> SelectionChangedCommand { get; }
        public System.Collections.Generic.List<Orc.SupportPackage.SupportPackageFileSystemArtifact> SupportPackageFileSystemArtifacts { get; }
    }
}
namespace Orc.SupportPackage.Views
{
    public class SupportPackageWindow : Catel.Windows.DataWindow, System.Windows.Markup.IComponentConnector
    {
        public SupportPackageWindow() { }
        public SupportPackageWindow(Orc.SupportPackage.ViewModels.SupportPackageViewModel? viewModel) { }
        public void InitializeComponent() { }
    }
}